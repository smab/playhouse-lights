JSON-API
Standardport: 4711


I stil med Hue-API:t
* Olika URL:er beroende på funktion
* POST och GET
Nödvändiga funktioner:
* Söka efter brygga
* Lägga till brygga manuellt
* Lista bryggor och lampor
* Ändra lampor


Felmeddelanden:
Response:
{"state": "error", "errorcode": "ERROR_CODE", "errormessage": "human-readable error message"}


Standardfelmeddelanden:
NOT_UNICODE -- couldn't decode as UTF-8
INVALID_JSON -- invalid JSON
INVALID_FORMAT -- the JSON was in an unexpected format
NOT_IMPLEMENTED -- feature not implemented yet


Se https://github.com/smab/playhouse-lights/blob/master/src/errorcodes.py för komplett lista


Om inget annat anges resulterar ett lyckat anrop i svaret {"state": "success"}

API (? efter attributnamn = optional):
~GET -- /lights



POST /lights -- ändra state för lampor
Request:
[
 {
    "x": x-koordinat för lampa,
    "y": y-koordinat för lampa,
    "change": <hue-state-ändringar>
  },
  ...
]

Felmeddelanden:
INVALID_STATE -- at least one state object was invalid
INVALID_ATTRIBUTE -- state object contains non-existent attributes
INVALID_VALUE -- state object contains invalid values


{"state": "error", "errorcode": "INVALID_STATE", "errormessage": "at least one state object was invalid", "invalid_states": [<state1 + "errorcode": "INVALID_ATTRIBUTE", "errormessage": ...>, ...]}

POST /lights/all -- sätt varje lampa till ett visst state
Request:
<hue-state-ändringar>
Felmeddelanden:
INVALID_ATTRIBUTE
INVALID_VALUE

GET /bridges -- få en lista på bryggor (IP, mac, etc)
Request: ignorerad
Response: {
    "state": success,
   [MAC]: {
       "ip": ...,
        "username": String (null om inget användarnamn satt),
        "valid_username": true/false,
       "lights": int (-1 om valid_username är false)
   },
   ...
}
POST /bridges/add -- lägg till brygga med IP (optionally användarnamn)
Request: {"ip": ..., "username?": ...}
Response: {"state": "success", "mac": ..., "valid_username": true/false}
Felmeddelanden:
BRIDGE_NOT_FOUND -- "couldn't find a Hue bridge at given address '{}'"
BRIDGE_ALREADY_ADDED -- "bridge has already been added to the server"

POST /bridges/[MAC] -- ändra inställningar för brygga (främst användarnamn)
Request: {"username": ...}
Response: {"state": "success", "username": ..., "valid_username": true/false}
Felmeddelanden:
NO_SUCH_MAC -- "the server does not know of a bridge with the MAC address '{mac}'"

POST /bridges/search -- sätt igång UPnP-discovery (asynkron)
Request: ignoreras
Response: {"state": "success"}


Felmeddelanden:
CURRENTLY_SEARCHING -- "currently searching for bridges"


POST /bridges/search/result -- hämta resultat från UPnP-discovery. om /bridges/search ej har anropats ännu kommer "bridges" att vara en tom map
Request: ignoreras
Response: {"state": "success", "bridges": {mac1: ip1, mac2: ip2, ...}}


Felmeddelanden:
CURRENTLY_SEARCHING


DELETE /bridges/[MAC] -- säg åt servern att glömma en brygga
Request: ignoreras
Response: {"state": "success"}


Felmeddelanden:
NO_SUCH_MAC


<hue-state-ändringar> = {
  "on?": true/false,
  "bri?": 0-255,
  "hue?": 0-65535,
  "sat?": 0-255,
  "xy?": [0.0-1.0, 0.0-1.0],
  "ct?": 153-500,
  "alert?": "none"/"select"/"lselect",
  "effect?": "none"/"colorloop",
  "transitiontime?": uint16 (multipel av 100 ms - default: 4)
}